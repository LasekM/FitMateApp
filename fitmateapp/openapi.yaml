openapi: 3.0.3
info:
  title: FitMateBackend API
  version: "1.1.0"
  description: |
    Backend API for managing training plans and scheduled workouts.
    ASP.NET Core 8 + EF Core + PostgreSQL.
    Update: Added `type` field to Plans (request/response).

servers:
  - url: http://localhost:8080/api
    description: Local (Docker/dev)

tags:
  - name: Plans
    description: CRUD operations for training plans
  - name: Scheduled
    description: CRUD operations for scheduled workouts

paths:
  /plans:
    get:
      tags: [Plans]
      summary: Get all plans
      operationId: getPlans
      responses:
        "200":
          description: List of plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlanDto"
    post:
      tags: [Plans]
      summary: Create a plan
      operationId: createPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePlanDto"
      responses:
        "200":
          description: Created plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanDto"

  /plans/{id}:
    get:
      tags: [Plans]
      summary: Get a plan by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Plan found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanDto"
    put:
      tags: [Plans]
      summary: Update a plan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePlanDto"
      responses:
        "200":
          description: Updated plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanDto"
    delete:
      tags: [Plans]
      summary: Delete a plan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Deleted

  /plans/{id}/duplicate:
    post:
      tags: [Plans]
      summary: Duplicate a plan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Duplicated plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanDto"

  /scheduled:
    get:
      tags: [Scheduled]
      summary: Get all scheduled workouts
      operationId: getScheduled
      responses:
        "200":
          description: List of scheduled workouts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScheduledDto"
    post:
      tags: [Scheduled]
      summary: Create a scheduled workout
      operationId: createScheduled
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateScheduledDto"
      responses:
        "200":
          description: Created scheduled workout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduledDto"

components:
  schemas:
    SetDto:
      type: object
      required: [reps, weight]
      properties:
        reps:
          type: integer
        weight:
          type: number
    ExerciseDto:
      type: object
      required: [name, rest, sets]
      properties:
        name:
          type: string
        rest:
          type: integer
        sets:
          type: array
          items:
            $ref: "#/components/schemas/SetDto"
    PlanDto:
      type: object
      required: [id, planName, type, exercises]
      properties:
        id:
          type: string
          format: uuid
        planName:
          type: string
        type:
          type: string
          example: "FBW"
        notes:
          type: string
          nullable: true
        exercises:
          type: array
          items:
            $ref: "#/components/schemas/ExerciseDto"
    CreatePlanDto:
      type: object
      required: [planName, type]
      properties:
        planName:
          type: string
        type:
          type: string
          example: "Push/Pull/Legs"
        notes:
          type: string
          nullable: true
        exercises:
          type: array
          items:
            $ref: "#/components/schemas/ExerciseDto"
          default: []
    ScheduledStatus:
      type: string
      enum: [planned, completed]
    ScheduledDto:
      type: object
      required: [id, date, planId, planName, status, exercises]
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
        time:
          type: string
          nullable: true
        planId:
          type: string
          format: uuid
        planName:
          type: string
        notes:
          type: string
          nullable: true
        exercises:
          type: array
          items:
            $ref: "#/components/schemas/ExerciseDto"
        status:
          $ref: "#/components/schemas/ScheduledStatus"
    CreateScheduledDto:
      type: object
      required: [date, planId, planName]
      properties:
        date:
          type: string
        time:
          type: string
          nullable: true
        planId:
          type: string
          format: uuid
        planName:
          type: string
        notes:
          type: string
          nullable: true
        exercises:
          type: array
          items:
            $ref: "#/components/schemas/ExerciseDto"
        status:
          $ref: "#/components/schemas/ScheduledStatus"
